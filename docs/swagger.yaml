definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
      username:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  auth.RegisterResponse:
    properties:
      id:
        type: string
      token:
        type: string
    type: object
  category.GetResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  constant.TaskType:
    enum:
    - LEARNING
    - MULTIPLE_CHOICE
    - ESSAY
    - MATCHING
    - DETECTIVE
    - LEVEL
    type: string
    x-enum-varnames:
    - Learning
    - MultipleChoice
    - Essay
    - Matching
    - Detective
    - Level
  src_entity_v1_http_task.Level:
    properties:
      qna:
        items:
          $ref: '#/definitions/src_entity_v1_http_task.QnaLevel'
        type: array
      total:
        type: integer
    type: object
  src_entity_v1_http_task.LevelPayload:
    properties:
      level_1:
        $ref: '#/definitions/src_entity_v1_http_task.Level'
      level_2:
        $ref: '#/definitions/src_entity_v1_http_task.Level'
    type: object
  src_entity_v1_http_task.QnAPayload:
    properties:
      choices:
        items:
          type: string
        type: array
      question:
        type: string
    type: object
  src_entity_v1_http_task.QnaLevel:
    properties:
      description:
        type: string
      question:
        type: string
    type: object
  task.GetResponse:
    properties:
      id:
        type: string
      levels:
        $ref: '#/definitions/src_entity_v1_http_task.LevelPayload'
      matches:
        $ref: '#/definitions/task.Matches'
      point:
        type: integer
      qnas:
        items:
          $ref: '#/definitions/src_entity_v1_http_task.QnAPayload'
        type: array
      sub_task:
        items:
          type: string
        type: array
      text:
        type: string
      type:
        $ref: '#/definitions/constant.TaskType'
      video_url:
        type: string
    type: object
  task.Matches:
    properties:
      choices:
        items:
          type: string
        type: array
      questions:
        items:
          type: string
        type: array
    type: object
  task.SubmitRequest:
    properties:
      answers:
        items:
          items:
            type: string
          type: array
        type: array
      id:
        type: string
      sub_task_id:
        type: string
    type: object
  user.GetResponse:
    properties:
      email:
        type: string
      id:
        type: string
      total_point:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/categories:
    get:
      description: Get category list
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.GetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Category List
      tags:
      - Category
  /v1/categories/progress:
    get:
      description: Get User's progress list
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.GetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User's progress list
      tags:
      - Category
  /v1/login:
    post:
      description: Login User
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login User
      tags:
      - Auth
  /v1/register:
    post:
      description: |-
        Register User
        `talent` request required if `role_id` is for talent. vice versa
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register User
      tags:
      - Auth
  /v1/sub-categories:
    get:
      description: Get category list
      parameters:
      - description: Category ID
        in: query
        name: category_id
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.GetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sub Category List
      tags:
      - User
  /v1/sub-tasks:
    get:
      description: Get sub tasks
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.GetResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sub Tasks
      tags:
      - Sub Task
  /v1/tasks:
    get:
      description: Get tasks
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.GetResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Tasks
      tags:
      - Task
    post:
      description: |-
        Submit tasks
        Please send the answer accordingly
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/task.SubmitRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Submit Tasks
      tags:
      - Task
  /v1/users:
    get:
      description: Get user detail by its bearer token
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Auth User
      tags:
      - User
    patch:
      description: Update user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update User
      tags:
      - User
swagger: "2.0"
